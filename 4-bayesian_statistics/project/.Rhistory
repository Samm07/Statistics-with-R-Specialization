# Chunk 1: load-packages
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(MASS)
# Chunk 2: load-data
load("movies.Rdata")
movies <- movies %>%
mutate(feature_film = ifelse(title_type == "Feature Film", "yes", "no"),
drama = ifelse(genre == "Drama", "yes", "no"),
mpaa_rating_R = ifelse(mpaa_rating == "R","yes","no"),
oscar_season = ifelse(thtr_rel_month == 11 | thtr_rel_month == 10 | thtr_rel_month == 12, "yes", "no"),
summer_season = ifelse(thtr_rel_month == 5 | thtr_rel_month == 6 | thtr_rel_month == 7 | thtr_rel_month == 8, "yes","no"))
movies2 <- movies[feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box]
movies <- movies %>%
mutate(feature_film = ifelse(title_type == "Feature Film", "yes", "no"),
drama = ifelse(genre == "Drama", "yes", "no"),
mpaa_rating_R = ifelse(mpaa_rating == "R","yes","no"),
oscar_season = ifelse(thtr_rel_month == 11 | thtr_rel_month == 10 | thtr_rel_month == 12, "yes", "no"),
summer_season = ifelse(thtr_rel_month == 5 | thtr_rel_month == 6 | thtr_rel_month == 7 | thtr_rel_month == 8, "yes","no"))
movies2 <- movies[feature_film, drama, runtime, mpaa_rating_R, thtr_rel_year, oscar_season, summer_season, imdb_rating, imdb_num_votes, critics_score, best_pic_nom, best_pic_win, best_actor_win, best_actress_win, best_dir_win, top200_box]
movies2_features <- c("feature_film", "drama", "runtime", "mpaa_rating_R", "thtr_rel_year", "oscar_season", "summer_season", "imdb_rating", "imdb_num_votes", "critics_score", "best_pic_nom", "best_pic_win", "best_actor_win", "best_actress_win", "best_dir_win", "top200_box")
movies2 <- movies[movies2_features]
View(movies2)
movies2_features <- c("audience_score", "feature_film", "drama", "runtime", "mpaa_rating_R", "thtr_rel_year", "oscar_season", "summer_season", "imdb_rating", "imdb_num_votes", "critics_score", "best_pic_nom", "best_pic_win", "best_actor_win", "best_actress_win", "best_dir_win", "top200_box")
movies2 <- movies[movies2_features]
View(movies2)
test.baslm <- bas.lm(audience_score ~  ., data=movies2,
prior = "BIC",
modelprior = uniform())
test.step <- stepAIC(test.baslm, direction = "backward", trace = FALSE)
test.baslm <- bas.lm(audience_score ~  ., data=movies2,
prior = "BIC",
modelprior = uniform())
test.step <- stepAIC(test.baslm, direction = "backward", trace = 1)
testlm <- lm(audience_score ~ ., data=movies2)
teststep <- stepAIC(testlm, direction = "backward", trace = FALSE)
testlm <- lm(audience_score ~ ., data=movies2)
teststep <- stepAIC(testlm, direction = "backward", trace = 1)
testlm <- lm(audience_score ~ ., data=movies2)
teststep <- stepAIC(testlm, direction = "backward", trace = 2)
testlm <- lm(audience_score ~ ., data=movies2)
teststep <- stepAIC(testlm, direction = "backward", trace = 10)
testlm <- lm(audience_score ~ ., data=movies2)
teststep <- stepAIC(testlm, direction = "backward", trace = 1000)
testlm <- lm(audience_score ~ ., data=movies2)
teststep <- stepAIC(testlm, direction = "backward", trace = TRUE)
testlm <- lm(audience_score ~ ., data= na.omit(movies2))
teststep <- stepAIC(testlm, direction = "backward", trace = TRUE)
hist(m_wage_iq$residuals)
# Chunk 1: load-packages
library(statsr)
library(MASS)
library(dplyr)
library(ggplot2)
library(BAS)
# Chunk 2: load-data
data(wage)
# Chunk 3: wage-dist
summary(wage)
# Chunk 4
hist(wage$wage)
# Chunk 5
length(which(wage$wage>957))
length(which(wage$wage<957))
length(which(wage$wage<300))
# Chunk 6: two-vars-eda
ggplot(data=wage, aes(x = wage, y = educ)) +
geom_jitter() +
geom_smooth(method = "lm")
# Chunk 7
ggplot(data=wage, aes(x = wage, y = exper)) +
geom_jitter() +
geom_smooth(method = "lm")
# Chunk 8
ggplot(data=wage, aes(x = wage, y = iq)) +
geom_jitter() +
geom_smooth(method = "lm")
# Chunk 9
cor(wage$wage,wage$educ)
cor(wage$wage,wage$exper)
cor(wage$wage,wage$iq)
# Chunk 10: scatter-score-bty_avg
ggplot(data = wage, aes(x = iq, y = wage)) +
geom_point()
# Chunk 11: wage-iq-model
m_wage_iq = lm(wage ~ iq, data = wage)
m_wage_iq$coefficients
summary(m_wage_iq)$sigma
hist(m_wage_iq$residuals)
m_wage_educ = lm(wage ~ educ, data = wage)
m_wage_educ$coefficients
plot(wage$wage ~ m_wage_educ$residuals)
hist(m_wage_educ$residuals)
# Chunk 1: load-packages
library(statsr)
library(MASS)
library(dplyr)
library(ggplot2)
library(BAS)
# Chunk 2: load-data
data(wage)
# Chunk 3: wage-dist
summary(wage)
# Chunk 4
hist(wage$wage)
# Chunk 5
length(which(wage$wage>957))
length(which(wage$wage<957))
length(which(wage$wage<300))
# Chunk 6: two-vars-eda
ggplot(data=wage, aes(x = wage, y = educ)) +
geom_jitter() +
geom_smooth(method = "lm")
# Chunk 7
ggplot(data=wage, aes(x = wage, y = exper)) +
geom_jitter() +
geom_smooth(method = "lm")
# Chunk 8
ggplot(data=wage, aes(x = wage, y = iq)) +
geom_jitter() +
geom_smooth(method = "lm")
# Chunk 9
cor(wage$wage,wage$educ)
cor(wage$wage,wage$exper)
cor(wage$wage,wage$iq)
# Chunk 10: scatter-score-bty_avg
ggplot(data = wage, aes(x = iq, y = wage)) +
geom_point()
# Chunk 11: wage-iq-model
m_wage_iq = lm(wage ~ iq, data = wage)
m_wage_iq$coefficients
summary(m_wage_iq)$sigma
# Chunk 12
plot(wage$wage ~ m_wage_iq$residuals)
# Chunk 13
hist(m_wage_iq$residuals)
# Chunk 14
m_wage_educ = lm(wage ~ educ, data = wage)
m_wage_educ$coefficients
plot(wage$wage ~ m_wage_educ$residuals)
# Chunk 15: educ-resid
hist(m_wage_educ$residuals)
# Chunk 16: lwage-iq-model
m_lwage_iq = lm(lwage ~ iq, data = wage)
hist(m_lwage_iq$residuals)
m_lwage_iq = bas.lm(lwage ~ iq, data = na.omit(wage[, c("lwage", "iq")]),
prior="BIC", bestmodel=c(1,1), n.models=1)
confint(coef(m_lwage_iq))
testlm <- lm(audience_score ~ ., data= na.omit(movies2))
teststep <- stepAIC(testlm, direction = "backward", trace = TRUE, k = log(n))
testlm <- lm(audience_score ~ ., data= na.omit(movies2))
teststep <- stepAIC(testlm, direction = "backward", trace = TRUE, k = ln(n))
BIC(testlm)
BIC(lm(audience_score ~ . -feature_film, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -feature_film, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -drama, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -runtime, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -mpaa_rating, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -thtr_rel_year, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -oscar_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -summer_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -imdb_rating, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -imdb_num_votes, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -critics_score, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -best_pic_nom, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -best_pic_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -best_actor_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -best_actress_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -best_dir_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -mpaa_rating_R, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -feature_film, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -drama, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -runtime, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -mpaa_rating_R, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -thre_rel_year, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -summer_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -imdb_rating, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -imdb_num_votes, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -critics_score, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_pic_nom, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_pic_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_actor_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_actress_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_dir_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -feature_film, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -drama, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -runtime, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -mpaa_rating_R, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -thtr_rel_year, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -summer_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -imdb_rating, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -imdb_num_votes, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -critics_score, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_pic_nom, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_pic_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_actor_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_actress_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_dir_win, data= na.omit(movies2)))
NEXT
BIC(lm(audience_score ~ . -top200_box -feature_film, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -drama, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -runtime, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -mpaa_rating_R, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -thtr_rel_year, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -summer_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -imdb_rating, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -imdb_num_votes, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -critics_score, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_pic_nom, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_pic_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_actor_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_actress_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -best_dir_win, data= na.omit(movies2)))
teststep2 <- stepAIC(testlm, direction = "backward", k=log(n), trace = TRUE)
teststep2 <- stepAIC(testlm, direction = "backward", k=log(651), trace = TRUE)
teststep <- stepAIC(testlm, direction = "backward", trace = TRUE)
BIC(lm(audience_score ~ . -top200_box -oscar_season, data= na.omit(movies2)))
NEXT
BIC(lm(audience_score ~ . -top200_box -oscar_season -feature_film, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -drama, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -runtime, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -mpaa_rating_R, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -thtr_rel_year, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -summer_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -imdb_rating, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -imdb_num_votes, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -critics_score, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_nom, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_actor_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_actress_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_dir_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -feature_film, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -drama, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -runtime, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -mpaa_rating_R, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -thtr_rel_year, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -summer_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -imdb_rating, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -imdb_num_votes, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -critics_score, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_pic_nom, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_actor_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_actress_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_dir_win, data= na.omit(movies2)))
NEXT
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -feature_film, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -drama, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -runtime, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -mpaa_rating_R, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -thtr_rel_year, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -summer_season, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -imdb_rating, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -imdb_num_votes, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -critics_score, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_pic_nom, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_actor_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_actress_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_dir_win, data= na.omit(movies2)))
BIC(lm(audience_score ~ runtime + imdb_rating + critics_score))
BIC(lm(audience_score ~ runtime + imdb_rating + critics_score, data=na.omit(movies2)))
BIC(lm(audience_score ~ runtime + imdb_rating, data=na.omit(movies2)))
BIC(lm(audience_score ~ runtime +  critics_score, data=na.omit(movies2)))
BIC(lm(audience_score ~ imdb_rating + critics_score, data=na.omit(movies2)))
BIC(lm(audience_score ~ runtime + imdb_rating + critics_score + mpaa_rating_R, data=na.omit(movies2)))
AIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_dir_win -best_actress_win -best_actor_win -best_pic_nom -imdb_num_votes -summer_season -thtr_rel_year -mpaa_rating_R, data= na.omit(movies2)))
AIC(lm(audience_score ~ . -top200_box -oscar_season -best_pic_win -best_dir_win -best_actress_win -best_actor_win -best_pic_nom -imdb_num_votes -summer_season -thtr_rel_year -mpaa_rating_R -drama -feature_film, data= na.omit(movies2)))
AIC(lm(audience_score ~ runtime + imdb_rating + critics_score, data=na.omit(movies2)))
AIC(lm(audience_score ~ runtime + mpaa_rating_R + thtr_rel_year + imdb_rating +
critics_score + best_pic_nom + best_actor_win + best_actress_win, data=na.omit(movies2)))
BIC(lm(audience_score ~ runtime + mpaa_rating_R + thtr_rel_year + imdb_rating +
critics_score + best_pic_nom + best_actor_win + best_actress_win, data=na.omit(movies2)))
testlm <- lm(audience_score ~ ., data= na.omit(movies2))
teststep <- stepAIC(testlm, direction = "backward", trace = TRUE)
teststep2 <- stepAIC(testlm, direction = "backward", k=log(651), trace = TRUE)
as_full <- lm(audience_score ~ ., data= na.omit(movies2))
stepAIC.model <- stepAIC(as_full, direction = "backward", trace = TRUE)
stepBIC.model <- stepAIC(as_full, direction = "backward", k=log(651), trace = TRUE)
stepBIC.model <- stepAIC(as_full, direction = "backward", k=log(651), trace = TRUE)
as_full <- lm(audience_score ~ ., data= na.omit(movies2))
stepAIC.model <- stepAIC(as_full, direction = "backward", trace = TRUE)
BIC.model.bas <- bas.lm(audience_score ~ runtime + imdb_rating + critics_score,
prior ="BIC",
modelprior = uniform(),
data = na.omit(movies2))
AIC.model.bas <- bas.lm(audience_score ~ runtime + mpaa_rating_R + thtr_rel_year + imdb_rating +
critics_score + best_pic_nom + best_actor_win + best_actress_win,
prior ="AIC",
modelprior = uniform(),
data = na.omit(movies2))
round(summary(AIC.model.bas),3)
round(summary(BIC.model.bas),3)
round(summary(bas.lm(audience_score ~ runtime + mpaa_rating_R + thtr_rel_year + imdb_rating +
critics_score + best_pic_nom + best_actor_win + best_actress_win,
prior ="AIC",
modelprior = uniform(),
data = na.omit(movies2))),3)
as_full <- lm(audience_score ~ ., data= na.omit(movies2))
stepAIC.model <- stepAIC(as_full, direction = "backward", trace = TRUE)
round(summary(bas.lm(audience_score ~ feature_film + drama + runtime + mpaa_rating_R +
thtr_rel_year + oscar_season + summer_season + imdb_rating +
imdb_num_votes + critics_score + best_pic_nom + best_pic_win +
best_actor_win + best_actress_win + best_dir_win + top200_box,
prior ="AIC",
modelprior = uniform(),
data = na.omit(movies2))),3)
image(AIC.model.bas, rotate = F)
image(BIC.model.bas, rotate = F)
image(AIC.model.bas)
image(BIC.model.bas, rotate = F)
image(BIC.model.bas)
coefficients(BIC.model.bas)
coefficients(AIC.model.bas)
# Chunk 1: load-packages
library(ggplot2)
library(dplyr)
library(statsr)
library(BAS)
library(MASS)
library(GGally)
# Chunk 2: load-data
load("movies.Rdata")
# Chunk 3
movies <- movies %>%
mutate(feature_film = ifelse(title_type == "Feature Film", "yes", "no"),
drama = ifelse(genre == "Drama", "yes", "no"),
mpaa_rating_R = ifelse(mpaa_rating == "R","yes","no"),
oscar_season = ifelse(thtr_rel_month == 11 | thtr_rel_month == 10 | thtr_rel_month == 12, "yes", "no"),
summer_season = ifelse(thtr_rel_month == 5 | thtr_rel_month == 6 | thtr_rel_month == 7 | thtr_rel_month == 8, "yes","no"))
# Chunk 4
movies2_features <- c("audience_score", "feature_film", "drama", "runtime", "mpaa_rating_R", "thtr_rel_year", "oscar_season", "summer_season", "imdb_rating", "imdb_num_votes", "critics_score", "best_pic_nom", "best_pic_win", "best_actor_win", "best_actress_win", "best_dir_win", "top200_box")
movies2 <- movies[movies2_features]
# Chunk 5
summary(movies2)
suppressWarnings(suppressMessages(print(ggpairs(movies2))))
View(movies2)
suppressWarnings(suppressMessages(print(ggpairs(movies2, columns = 1:8)))
suppressWarnings(suppressMessages(print(ggpairs(movies2, columns = 1:8))))
suppressWarnings(suppressMessages(print(ggpairs(movies2, columns = 1:8))))
suppressWarnings(suppressMessages(print(ggpairs(movies2, columns = c(1,9:17)))))
suppressWarnings(suppressMessages(print(ggpairs(movies2, columns = 1:8))))
ggplot(data=movies2, aes(x = audience_score, y = critics_score)) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data=movies2, aes(x = audience_score, y = imdb_rating)) +
geom_jitter() +
geom_smooth(method = "lm")
